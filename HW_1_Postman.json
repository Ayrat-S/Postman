{
  "HW_1_postman": [ "
Postman.
HW_1

Создать запросы в Postman.

Protocol: http
IP: 162.55.220.72
Port: 5005

================

EP_1
Method: GET
EndPoint: /get_method
request url params: 
 name: str
 age: int

response: 
[
    “Str”,
    “Str”
]

ВЫПОЛНЕНИЕ:
1)
Создаем коллекцию HW_1
Создаем запрос EP_1

2)
Выбираем метод GET
Вписываем в адресную строку http://162.55.220.72:5005/get_method

3)
Во вкладке Params вносим параметры со значениями:
name Ayrat
age 35
Сохраняем через кнопку Save или Ctrl + S.

4)
Проверяем - в адресной строке должен появиться текст http://162.55.220.72:5005/get_method?name=Ayrat&age=35

5)
Жмем Send
Получаем ответ от сервера:
[
    "Ayrat",
    "35"
]

==================

EP_2
Method: POST
EndPoint: /user_info_3
request form data: 
 name: str
 age: int
 salary: int

response: 
{'name': name,
          'age': age,
          'salary': salary,
          'family': {'children': [['Alex', 24], ['Kate', 12]],
                     'u_salary_1_5_year': salary * 4}}

ВЫПОЛНЕНИЕ:
1)
В коллекции HW_1 создаем запрос EP_2

2)
Выбираем метод POST
Вписываем в адресную строку http://162.55.220.72:5005/user_info_3

3)
Заходим во вкладку Body и через пункт form-data вносим параметры со значениями:
name: Ayrat
age: 35
salary: 2000
Сохраняем.

4)
Жмем Send
Получаем ответ от сервера:
{
    "age": "35",
    "family": {
        "children": [
            [
                "Alex",
                24
            ],
            [
                "Kate",
                12
            ]
        ],
        "u_salary_1_5_year": 8000
    },
    "name": "Ayrat",
    "salary": 2000
}

==================

EP_3
Method: GET
EndPoint: /object_info_1
request url params: 
 name: str
 age: int
 weight: int

response: 
{'name': name,
          'age': age,
          'daily_food': weight * 0.012,
          'daily_sleep': weight * 2.5}


ВЫПОЛНЕНИЕ:
1)
В коллекции HW_1 создаем запрос EP_3

2)
Выбираем метод GET
Вписываем в адресную строку http://162.55.220.72:5005/object_info_1

3) 
Во вкладке Params вносим параметры со значениями:
name: Ayrat
age: 35
weight: 75

4) Получим ответ от сервера:
{
    "age": 35,
    "daily_food": 0.9,
    "daily_sleep": 187.5,
    "name": "Ayrat"
}

==================

EP_4
Method: GET
EndPoint: /object_info_2
request url params: 
 name: str
 age: int
 salary: int

response: 
{'start_qa_salary': salary,
          'qa_salary_after_6_months': salary * 2,
          'qa_salary_after_12_months': salary * 2.7,
          'qa_salary_after_1.5_year': salary * 3.3,
          'qa_salary_after_3.5_years': salary * 3.8,
          'person': {'u_name': [user_name, salary, age],
                     'u_age': age,
                     'u_salary_5_years': salary * 4.2}
          }

ВЫПОЛНЕНИЕ:
1)
В коллекции HW_1 создаем запрос EP_4

2)
Выбираем метод GET
Вписываем в адресную строку http://162.55.220.72:5005/object_info_2

3) 
Во вкладке Params вносим параметры со значениями:
name: Ayrat
age: 35
salary: 2000

4) 
Получим ответ от сервера:
{
    "person": {
        "u_age": 35,
        "u_name": [
            "Ayrat",
            2000,
            35
        ],
        "u_salary_5_years": 8400.0
    },
    "qa_salary_after_1.5_year": 6600.0,
    "qa_salary_after_12_months": 5400.0,
    "qa_salary_after_3.5_years": 7600.0,
    "qa_salary_after_6_months": 4000,
    "start_qa_salary": 2000
}

==================

EP_5
Method: GET
EndPoint: /object_info_3
request url params: 
 name: str
 age: int
 salary: int

response: 
{'name': name,
          'age': age,
          'salary': salary,
          'family': {'children': [['Alex', 24], ['Kate', 12]],
                     'pets': {'cat':{'name':'Sunny',
                                     'age': 3},
                              'dog':{'name':'Luky',
                                     'age': 4}},
                     'u_salary_1_5_year': salary * 4}
          }


ВЫПОЛНЕНИЕ:
1)
В коллекции HW_1 создаем запрос EP_5

2)
Выбираем метод GET
Вписываем в адресную строку http://162.55.220.72:5005/object_info_3

3) 
Во вкладке Params вносим параметры со значениями:
name: Ayrat
age: 35
salary: 2000

4) 
Получим ответ от сервера:
{
    "age": "35",
    "family": {
        "children": [
            [
                "Alex",
                24
            ],
            [
                "Kate",
                12
            ]
        ],
        "pets": {
            "cat": {
                "age": 3,
                "name": "Sunny"
            },
            "dog": {
                "age": 4,
                "name": "Luky"
            }
        },
        "u_salary_1_5_year": 8000
    },
    "name": "Ayrat",
    "salary": 2000
}

==================

EP_6
Method: GET
EndPoint: /object_info_4
request url params: 
 name: str
 age: int
 salary: int

response: 
{'name': name,
          'age': int(age),
          'salary': [salary, str(salary * 2), str(salary * 3)]}


ВЫПОЛНЕНИЕ:
1)
В коллекции HW_1 создаем запрос EP_6

2)
Выбираем метод GET
Вписываем в адресную строку http://162.55.220.72:5005/object_info_4

3) 
Во вкладке Params вносим параметры со значениями:
name: Ayrat
age: 35
salary: 2000

4) 
Получим ответ от сервера:
{
    "age": 35,
    "name": "Ayrat",
    "salary": [
        2000,
        "4000",
        "6000"
    ]
}

==================

EP_7
Method: POST
EndPoint: /user_info_2
request form data: 
 name: str
 age: int
 salary: int

response: 
{'start_qa_salary': salary,
          'qa_salary_after_6_months': salary * 2,
          'qa_salary_after_12_months': salary * 2.7,
          'qa_salary_after_1.5_year': salary * 3.3,
          'qa_salary_after_3.5_years': salary * 3.8,
          'person': {'u_name': [user_name, salary, age],
                     'u_age': age,
                     'u_salary_5_years': salary * 4.2}
          }

ВЫПОЛНЕНИЕ:
1)
В коллекции HW_1 создаем запрос EP_7

2)
Выбираем метод POST
Вписываем в адресную строку http://162.55.220.72:5005/user_info_2

3) 
Во вкладке Boby в form-data вносим параметры со значениями:
name: Ayrat
age: 35
salary: 2000

4) 
Получим ответ от сервера:
{
    "person": {
        "u_age": 35,
        "u_name": [
            "Ayrat",
            2000,
            35
        ],
        "u_salary_5_years": 8400.0
    },
    "qa_salary_after_1.5_year": 6600.0,
    "qa_salary_after_12_months": 5400.0,
    "qa_salary_after_3.5_years": 7600.0,
    "qa_salary_after_6_months": 4000,
    "start_qa_salary": 2000
} 
" ]

}
