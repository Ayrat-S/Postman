{
	"info": {
		"_postman_id": "685ef8a9-5d88-45d1-8594-eeac95c9e5ff",
		"name": "F_HW_3_Postman_TASK_1_(14.07 12:21)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19866732"
	},
	"item": [
		{
			"name": "1-13 TASKS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"// 4. Отправить запрос.\r",
							"\r",
							"// 5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 6. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"console.log(\"jsonData\", jsonData)\r",
							"\r",
							"// 7. Спарсить request.\r",
							"let request_POST_Data = pm.request;\r",
							"console.log(\"request_POST_Data\", request_POST_Data)\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Body matches string: start_qa_salary\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Body matches string: qa_salary_after_6_months\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Body matches string: qa_salary_after_12_months\", function (){\r",
							"    pm.expect(pm.response.text()).to.include(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Body matches string: qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Body mathces string: qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Body mathces string: person\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"person\");\r",
							"\r",
							"});\r",
							"\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"// Response salary:\r",
							"let response_start_qa_salary = jsonData.start_qa_salary;\r",
							"console.log(\"response_start_qa_salary\", response_start_qa_salary)\r",
							"// Request salary:\r",
							"let request_salary = +pm.request.body.formdata.toObject().salary;\r",
							"console.log(\"request_salary\", request_salary)\r",
							"// Test: start_qa_salary равен salary из request\r",
							"pm.test(\"Your test compare: start_qa_salary\", function () {\r",
							"    pm.expect(response_start_qa_salary).to.eql(request_salary);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}